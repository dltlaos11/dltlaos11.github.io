{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/algorithms/basic-code-writing-tips","result":{"data":{"markdownRemark":{"id":"f2982539-0839-538e-93fc-3cbb58ee8bd2","html":"<ul>\n<li><a href=\"#%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84\">시간복잡도</a>\n<ul>\n<li><a href=\"#%EB%B9%85%EC%98%A4%ED%91%9C%EA%B8%B0%EB%B2%95\">빅오표기법(Big-O)</a></li>\n<li><a href=\"#%EA%B3%B5%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84\">공간복잡도</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%A0%95%EC%88%98-%EC%9E%90%EB%A3%8C%ED%98%95\">정수자료형</a></li>\n<li><a href=\"#%EC%8B%A4%EC%88%98-%EC%9E%90%EB%A3%8C%ED%98%95\">실수자료형</a></li>\n<li><a href=\"#%EA%B8%B0%EC%B4%88-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%EC%9A%94%EB%A0%B9\">기초 코드 작성요령</a></li>\n</ul>\n<h2 id=\"시간복잡도\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84\" aria-label=\"시간복잡도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간복잡도</h2>\n<h5 id=\"입력의-크기와-문제를-해결하는데-걸리는-시간의-상관관계\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5%EC%9D%98-%ED%81%AC%EA%B8%B0%EC%99%80-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%ED%95%B4%EA%B2%B0%ED%95%98%EB%8A%94%EB%8D%B0-%EA%B1%B8%EB%A6%AC%EB%8A%94-%EC%8B%9C%EA%B0%84%EC%9D%98-%EC%83%81%EA%B4%80%EA%B4%80%EA%B3%84\" aria-label=\"입력의 크기와 문제를 해결하는데 걸리는 시간의 상관관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력의 크기와 문제를 해결하는데 걸리는 시간의 상관관계</h5>\n<p>다음 코드에서 함수가 몇 번의 연산을 하는지 시간복잡도를 구해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">func1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">int</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">(</span>초깃값 설정 cnt<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\r\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> n번<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">(</span>대소비교<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">(</span>작을경우<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span> n번<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">(</span>나머지 연산<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">(</span>같다면<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">(</span>cnt <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token keyword\">return</span> cnt<span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">(</span>cnt 반환<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">+</span>n<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span>n<span class=\"token operator\">+</span><span class=\"token number\">3</span> <span class=\"token operator\">-></span> n에 비례</code></pre></div>\n<p>또 다른 예제를 보자</p>\n<blockquote>\n<p>대회장에 N명의 사람들이 일렬로 서있다. 거기서 당신은 이름이 ‘가나다’인 사람을 찾기 위해 사람들에게 이름을 물어볼 것이다. 이 떄 사람들은 이름 순으로 서있다. 이름을 물어보고 대답을 듣는데까지 1초가 걸린다면 얼마만큼의 시간이 필요할까?</p>\n</blockquote>\n<details>\r\n<summary>정답\r\n</summary>\r\n업다운게임을 하듯이 중간 사람에게 계속 물어보면된다. 반씩 줄여나가면서 ‘가나다’의 사람의 위치를 유추. 최선의 경우 1초, 최악의 경우 lg N초, 평균적으로 lg N초가 필요하다. 걸리는 시간은 lg N에 비례한다.\n<ul>\n<li>lg 2= 1, lg 4= 2 ,lg 8 =3</li>\n<li>반씩 줄여나가면서 찾는 경우 평균적 log N에 비례</li>\n</ul>\n</details>\n<h4 id=\"빅오표기법\" style=\"position:relative;\"><a href=\"#%EB%B9%85%EC%98%A4%ED%91%9C%EA%B8%B0%EB%B2%95\" aria-label=\"빅오표기법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빅오표기법</h4>\n<h5 id=\"주어진-식을-값이-가장-큰-대포항만-남겨서-나타내는-방법\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%96%B4%EC%A7%84-%EC%8B%9D%EC%9D%84-%EA%B0%92%EC%9D%B4-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EB%8C%80%ED%8F%AC%ED%95%AD%EB%A7%8C-%EB%82%A8%EA%B2%A8%EC%84%9C-%EB%82%98%ED%83%80%EB%82%B4%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"주어진 식을 값이 가장 큰 대포항만 남겨서 나타내는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주어진 식을 값이 가장 큰 대포항만 남겨서 나타내는 방법</h5>\n<ul>\n<li>O(N^): 6N^ + 20N+10lgN</li>\n<li>상수 O(1): 1, 5, ..</li>\n</ul>\n<p>대표적인 시간복잡도의 그래프\r\n<img width=\"704\" alt=\"image\" src=\"https://github.com/dltlaos11/dltlaos11.github.io/assets/74396128/2fef7205-1fc8-41ca-91d7-a2784bb1d63d\">\r\nO(1)&#x3C;O(lgN)-로그시간&#x3C;O(N)-선형시간&#x3C;O(NlgN)&#x3C;<Mark>O(N^) &#x3C; O(N!) N이 25이하로 작은게 아니면 시간제한 통과하기 힘듦</p>\n<p>N의 크기에 따른 허용 시간복잡도\r\n<img width=\"703\" alt=\"image\" src=\"https://github.com/dltlaos11/dltlaos11.github.io/assets/74396128/6cf7d5e4-1641-43e1-b70d-3544d32959ee\">\r\n→ 주어진 문제를 보고 풀이를 떠올린 후에 무턱대고 바로 그걸 짜는게 아니라, 내 풀이가 이 문제를 제한 시간 내로 통과할 수 있는지, 즉 내 알고리즘의 시간복잡도가 올바른지 먼저 생각해봐야 한다.</p>\n<h6 id=\"1\" style=\"position:relative;\"><a href=\"#1\" aria-label=\"1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1</h6>\n<img width=\"704\" alt=\"image\" src=\"https://github.com/dltlaos11/dltlaos11.github.io/assets/74396128/fe26d75d-690a-44a2-8c01-9aecca41151d\">\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">func1</span> <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">let</span> cnt <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> i<span class=\"token operator\">%</span><span class=\"token number\">5</span><span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> cnt<span class=\"token operator\">+=</span>i<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> cnt<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">=></span> <span class=\"token constant\">O</span><span class=\"token punctuation\">(</span><span class=\"token constant\">N</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h6 id=\"2\" style=\"position:relative;\"><a href=\"#2\" aria-label=\"2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2</h6>\n<img width=\"705\" alt=\"image\" src=\"https://github.com/dltlaos11/dltlaos11.github.io/assets/74396128/b3e1bd26-eaf7-44d8-b186-18cd66826abb\">\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">func2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">=></span> <span class=\"token constant\">O</span><span class=\"token punctuation\">(</span><span class=\"token constant\">N</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h6 id=\"3\" style=\"position:relative;\"><a href=\"#3\" aria-label=\"3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3</h6>\n<img width=\"706\" alt=\"image\" src=\"https://github.com/dltlaos11/dltlaos11.github.io/assets/74396128/c1b9b2e9-da23-4e91-a637-c9103d3b44c9\">\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">func3</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">*</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>i<span class=\"token operator\">===</span>n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">=></span> <span class=\"token constant\">O</span><span class=\"token punctuation\">(</span>√<span class=\"token constant\">N</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h6 id=\"4\" style=\"position:relative;\"><a href=\"#4\" aria-label=\"4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4</h6>\n<img width=\"706\" alt=\"image\" src=\"https://github.com/dltlaos11/dltlaos11.github.io/assets/74396128/ca6b3771-491a-42f0-8437-0583de92b133\">\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">func4</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n<span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">)</span> i<span class=\"token operator\">=</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token constant\">N</span>이 <span class=\"token number\">2</span><span class=\"token operator\">^</span>k이상 <span class=\"token number\">2</span><span class=\"token operator\">^</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span>미만이라고 할떄 <span class=\"token keyword\">while</span>문 안에서 i는 최대 k번만 <span class=\"token number\">2</span>배로 커짐\r\nval은 <span class=\"token number\">2</span><span class=\"token operator\">^</span>k<span class=\"token punctuation\">,</span> so<span class=\"token punctuation\">,</span> <span class=\"token constant\">O</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">O</span><span class=\"token punctuation\">(</span>lgN<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"공간복잡도\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84\" aria-label=\"공간복잡도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공간복잡도</h2>\n<h5 id=\"입력의-크기와-문제를-해결하는데-필요한-공간의-상관관계\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5%EC%9D%98-%ED%81%AC%EA%B8%B0%EC%99%80-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%ED%95%B4%EA%B2%B0%ED%95%98%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EA%B3%B5%EA%B0%84%EC%9D%98-%EC%83%81%EA%B4%80%EA%B4%80%EA%B3%84\" aria-label=\"입력의 크기와 문제를 해결하는데 필요한 공간의 상관관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력의 크기와 문제를 해결하는데 필요한 공간의 상관관계</h5>\n<p>메모리 제한이 512MB일떄 int변수(4byte)를 대략 1.2억개 정도 선언할 수 있다.</p>\n<ul>\n<li>512MB = 1.2억개의 int</li>\n</ul>\n<p>→ 떠올린 크기가 5억인 배열을 필요로 한다면 해당 풀이는 메모리제한을 만족하지 못하므로 틀림</p>\n<h2 id=\"정수-자료형\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%88%98-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"정수 자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정수 자료형</h2>\n<ul>\n<li>\n<p>char: -2^7 ~ 2^7-1 (-128 ~ 127)</p>\n</li>\n<li>\n<p>unsigend char: 2^8-1 (0~255)\r\n<img width=\"703\" alt=\"image\" src=\"https://github.com/dltlaos11/dltlaos11.github.io/assets/74396128/21f83750-da80-4657-b16a-e89a345ef63f\"></p>\n</li>\n<li>\n<p>short: 2(2^15-1=32767)</p>\n</li>\n<li>\n<p>int: 4(2^31-1 = 2.1*10^9)</p>\n</li>\n<li>\n<p>long: 8(2^63-1 = 9.2*10^18)</p>\n</li>\n</ul>\n<h3 id=\"iteger-overflow\" style=\"position:relative;\"><a href=\"#iteger-overflow\" aria-label=\"iteger overflow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Iteger Overflow</h3>\n<ul>\n<li>127(01111111)+1(00000001) = -128(10000000)</li>\n</ul>\n<p>해결법 ⇒ 강제형변환</p>\n<ul>\n<li>char ⇒ int</li>\n<li>int ⇒ long</li>\n</ul>\n<h2 id=\"실수-자료형\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"실수 자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실수 자료형</h2>\n<ul>\n<li>\n<p>float: 4byte(32)</p>\n</li>\n<li>\n<p>double: 8byte(64)\r\n<img width=\"705\" alt=\"image\" src=\"https://github.com/dltlaos11/dltlaos11.github.io/assets/74396128/9eb4d652-0ddc-4f70-81bc-f472d5eb4c8b\">\r\n<img width=\"705\" alt=\"image\" src=\"https://github.com/dltlaos11/dltlaos11.github.io/assets/74396128/e5be8aaf-331d-479c-9482-b985b388c81a\"></p>\n</li>\n</ul>\n<p>실수를 나타날떄 칸은 sign(음수인지, 양수인지), exponent(지수), fraction field(유효숫자)로 나누어짐</p>\n<p>=> IEEE-754 format</p>\n<p><em>실수 자료형 정리</em></p>\n<ol>\n<li>실수의 저장/연산 과정에서 반드시 오차가 발생할 수 밖에 없음</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">a</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token operator\">+</span><span class=\"token number\">0.1</span><span class=\"token operator\">+</span><span class=\"token number\">0.1</span> <span class=\"token operator\">==</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bye\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token operator\">=></span> bye</code></pre></div>\n<p>→ 유효숫자가 들어가는 fraction field가 유한하기 떄문에 2진수 기준으로 무한소수인걸 저장하려고 할 떄 에는 어쩔 수 없이 float은 앞 23 bit, double은 앞 52bit까지만 잘라서 저장할 수 밖에 없다. 0.1은 이진수로 나타내면 무한소수여서 애초에 오차가 있는 채로 저장, 그걸 3번 더하다보니 오차가 더 커져서 bye가 출력.</p>\n<p>fraction filed를 가진 각 자료형의 표현 범위</p>\n<ul>\n<li>float: 유효숫자 6자리(상대오차 10^-6)</li>\n<li>double: 유효숫자 15자리(상대오차 10^-15)</li>\n</ul>\n<p>상대 오차의 허용 범위에서 두 자료형끼리 차이가 크므로 float &#x3C; double 지향<br>\n실수 자료형 필요한 문제면 힌트를 준다. 절대/상대 10^-6까지 허용</p>\n<ol start=\"2\">\n<li>double에 long long 범위의 정수를 함부로 담으면 안됨</li>\n<li>실수를 비교할 떄는 등호를 사용하면 안됨</li>\n</ol>\n<ul>\n<li>1e-12 = 10^-12</li>\n<li>10^9 = 1e9</li>\n</ul>\n<h2 id=\"기초-코드-작성요령\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%B4%88-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%EC%9A%94%EB%A0%B9\" aria-label=\"기초 코드 작성요령 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기초 코드 작성요령</h2>\n<ul>\n<li>vector: 일종의 가변배열로 크기를 마음대로 늘였다 줄였다 가능</li>\n</ul>\n<p>BOJ 10871</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> input <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/dev/stdin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    answer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>-> 결국 남이 읽기 좋은 코드보다는 빠른 풀이를 위한 코드를 작성해야 한다.</p>\n<ul>\n<li>출력 맨 마지막 공백 혹은 줄바꿈이 추가로 있어도 상관이 없다.</li>\n<li>디버거는 굳이 사용하지 않아도 된다. log 사용 권장</li>\n</ul>","fields":{"slug":"/posts/2023-08-24---기초 코드 작성 요령//posts/algorithms/basic-code-writing-tips","tagSlugs":["/tag/algorithms/"]},"frontmatter":{"date":"2023-08-24T17:40:32.169Z","description":"알고리즘의 기초 코드 작성 요령에 대해서 배웁니다.","tags":["Algorithms"],"title":"알고리즘 기초 코드 작성 요령","socialImage":null}}},"pageContext":{"slug":"/posts/2023-08-24---기초 코드 작성 요령//posts/algorithms/basic-code-writing-tips"}},"staticQueryHashes":["2236276093","251939775","401334301"]}