{"version":3,"file":"component---src-templates-post-template-post-template-tsx-d85673e1cfef65e7fb92.js","mappings":"kRA2BA,MApBeA,KACb,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,MAEnB,OACEC,EAAAA,cAAA,OAAKC,UCVW,gCDWdD,EAAAA,cAAA,KAAGC,UCVQ,6BDWRH,EAAOI,IACRF,EAAAA,cAAA,KACEC,UCZW,gCDaXE,MAAMC,EAAAA,EAAAA,IAAe,UAAWN,EAAOO,SAASC,SAChDC,IAAI,sBACJC,OAAO,YAKP,EEPV,MAPiCC,IAAA,IAAC,KAAEC,EAAI,MAAEC,GAAcF,EAAA,OACtDT,EAAAA,cAAA,OAAKC,UCRc,kCDSjBD,EAAAA,cAAA,MAAIC,UCRW,gCDQeU,GAC9BX,EAAAA,cAAA,OAAKC,UCXS,8BDWeW,wBAAyB,CAAEC,OAAQH,KAC5D,EEQR,MAb8BD,IAAA,IAAC,KAAEK,GAAaL,EAAA,OAC5CT,EAAAA,cAAA,OAAKC,UCPW,4BDQdD,EAAAA,cAAA,KAAGC,UCTW,4BDSa,YACf,IACT,IAAIc,KAAKD,GAAME,mBAAmB,QAAS,CAC1CC,KAAM,UACNC,MAAO,QACPC,IAAK,aAGL,E,UEhBR,MAOMC,EAAyCpB,EAAAA,MAAWS,IAAsB,IAArB,KAAEY,EAAI,MAAEC,GAAOb,EACxE,MAAMc,GAAeC,EAAAA,EAAAA,aAsBrB,OApBAC,EAAAA,EAAAA,kBAAgB,KACd,MAAMC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACjBC,IAdM,gCAeNT,OACAC,QACA,aAAc,WACdS,MAAO,iBACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQN,GAAYO,SAAQC,IAAmB,IAAjBC,EAAKC,GAAMF,EAC9CX,EAAWc,aAAaF,EAAKC,EAAM,IAGrChB,EAAakB,QAASC,YAAYhB,EAAW,GAC5C,CAACL,IAEGrB,EAAAA,cAAA,OAAK2C,IAAKpB,GAAgB,IAGnCH,EAAWwB,YAAc,aAEzB,QCSA,MA3B8BnC,IAAsB,IAArB,KAAEoC,GAAapC,EAC5C,MAAM,KAAEqC,GAASD,GACX,SAAEE,EAAQ,KAAEC,GAASH,EAAKI,QAC1B,KAAEC,EAAI,MAAEvC,EAAK,KAAEG,GAAS+B,EAAKM,YAEnC,OACEnD,EAAAA,cAAA,OAAKC,UCnBS,4BDoBZD,EAAAA,cAAA,OAAKC,UCxBU,+BDyBbD,EAAAA,cAACoD,EAAAA,EAAM,CAACnD,UC1BY,qCD0BsBU,MAAM,eAAe0C,GAAG,MAClErD,EAAAA,cAACsD,EAAAA,EAAa,OAEhBtD,EAAAA,cAAA,OAAKC,UC1BU,+BD2BbD,EAAAA,cAACuD,EAAO,CAAC7C,KAAMoC,EAAMnC,MAAOA,KAE9BX,EAAAA,cAAA,OAAKC,UC5BS,8BD6BZD,EAAAA,cAACwD,EAAI,CAAC1C,KAAMA,IACXoC,GAAQH,GAAY/C,EAAAA,cAACyD,EAAAA,EAAI,CAACP,KAAMA,EAAMH,SAAUA,IACjD/C,EAAAA,cAACH,EAAM,OAETG,EAAAA,cAAA,OAAKC,UCnCW,gCDqCdD,EAAAA,cAACoB,EAAU,CAACC,KAAK,gCAAgCC,MAAM,kBAErD,EE1BV,MA4BaoC,EAAwBrB,IAAe,IAAd,KAAEsB,GAAMtB,EAC5C,MAAM,MAAE1B,EAAK,SAAEiD,EAAQ,IAAEC,IAAQ9D,EAAAA,EAAAA,OAG/BoD,aACExC,MAAOmD,EACPC,YAAaC,EAAkB,GAAE,YACjCC,IAEAN,EAAKO,eAEHH,EAAcC,GAAmBJ,EACjCO,GAAQF,aAAW,EAAXA,EAAaG,YAAaP,EAAIQ,OAAOJ,aAAW,EAAXA,EAAaG,WAEhE,OACEpE,EAAAA,cAACwD,EAAAA,EAAI,CACH7C,MAAUmD,EAAS,MAAMnD,EACzBoD,YAAaA,EACbI,MAAOA,GACP,EAIN,MAnDsC1D,IAAA,IAAGkD,MAAM,eAAEO,IAAyBzD,EAAA,OACxET,EAAAA,cAACsE,EAAAA,EAAM,KACLtE,EAAAA,cAACuE,EAAI,CAAC1B,KAAMqB,IACL,C","sources":["webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Utterances.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.module.scss","webpack://gatsby-starter-lumen/./src/templates/PostTemplate/PostTemplate.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { useSiteMetadata } from \"@/hooks\";\nimport { getContactHref } from \"@/utils\";\n\nimport * as styles from \"./Author.module.scss\";\n\nconst Author = () => {\n  const { author } = useSiteMetadata();\n\n  return (\n    <div className={styles.author}>\n      <p className={styles.bio}>\n        {author.bio}\n        <a\n          className={styles.twitter}\n          href={getContactHref(\"twitter\", author.contacts.twitter)}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {/* <strong>{author.name}</strong> on Twitter */}\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Author;\n","// extracted by mini-css-extract-plugin\nexport var author = \"Author-module--author--1c58d\";\nexport var bio = \"Author-module--bio--08950\";\nexport var twitter = \"Author-module--twitter--90647\";","import React from \"react\";\n\nimport * as styles from \"./Content.module.scss\";\n\ninterface Props {\n  title: string;\n  body: string;\n}\n\nconst Content: React.FC<Props> = ({ body, title }: Props) => (\n  <div className={styles.content}>\n    <h1 className={styles.title}>{title}</h1>\n    <div className={styles.body} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport var body = \"Content-module--body--726c2\";\nexport var content = \"Content-module--content--80d58\";\nexport var title = \"Content-module--title--09504\";","import React from \"react\";\n\nimport * as styles from \"./Meta.module.scss\";\n\ninterface Props {\n  date: string;\n}\n\nconst Meta: React.FC<Props> = ({ date }: Props) => (\n  <div className={styles.meta}>\n    <p className={styles.date}>\n      Published{\" \"}\n      {new Date(date).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      })}\n    </p>\n  </div>\n);\n\nexport default Meta;\n","// extracted by mini-css-extract-plugin\nexport var date = \"Meta-module--date--4d30d\";\nexport var meta = \"Meta-module--meta--dae0a\";","import React, { createRef, useLayoutEffect } from \"react\";\n\nconst src = \"https://utteranc.es/client.js\";\n\nexport interface IUtterancesProps {\n  repo: string;\n  theme: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\n  const containerRef = createRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement(\"script\");\n\n    const attributes = {\n      src,\n      repo,\n      theme,\n      \"issue-term\": \"pathname\",\n      label: \"âœ¨ðŸ’¬ comments âœ¨\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current!.appendChild(utterances);\n  }, [repo]);\n\n  return <div ref={containerRef} />;\n});\n\nUtterances.displayName = \"Utterances\";\n\nexport default Utterances;\n","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\nimport { ThemeSwitcher } from \"@/components/ThemeSwitcher\";\nimport type { Node } from \"@/types\";\n\nimport { Author } from \"./Author\";\nimport { Comments } from \"./Comments\";\nimport { Content } from \"./Content\";\nimport { Meta } from \"./Meta\";\nimport { Tags } from \"./Tags\";\n\nimport * as styles from \"./Post.module.scss\";\nimport Utterances from \"./Utterances\";\n\ninterface Props {\n  post: Node;\n}\n\nconst Post: React.FC<Props> = ({ post }: Props) => {\n  const { html } = post;\n  const { tagSlugs, slug } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  return (\n    <div className={styles.post}>\n      <div className={styles.buttons}>\n        <Button className={styles.buttonArticles} title=\"All Articles\" to=\"/\" />\n        <ThemeSwitcher />\n      </div>\n      <div className={styles.content}>\n        <Content body={html} title={title} />\n      </div>\n      <div className={styles.footer}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n        <Author />\n      </div>\n      <div className={styles.comments}>\n        {/* <Comments postSlug={slug} postTitle={post.frontmatter.title} /> */}\n        <Utterances repo=\"dltlaos11/dltlaos11.github.io\" theme=\"github-light\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport var buttonArticles = \"Post-module--buttonArticles--d793a\";\nexport var buttons = \"Post-module--buttons--2972d\";\nexport var comments = \"Post-module--comments--d3b99\";\nexport var content = \"Post-module--content--3c6e5\";\nexport var footer = \"Post-module--footer--f8705\";\nexport var post = \"Post-module--post--3a994\";","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"@/components/Layout\";\nimport { Meta } from \"@/components/Meta\";\nimport { Post } from \"@/components/Post\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { Node } from \"@/types\";\n\ninterface Props {\n  data: {\n    markdownRemark: Node;\n  };\n}\n\nconst PostTemplate: React.FC<Props> = ({ data: { markdownRemark } }: Props) => (\n  <Layout>\n    <Post post={markdownRemark} />\n  </Layout>\n);\n\nexport const query = graphql`\n  query PostTemplate($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage {\n          publicURL\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: React.FC<Props> = ({ data }) => {\n  const { title, subtitle, url } = useSiteMetadata();\n\n  const {\n    frontmatter: {\n      title: postTitle,\n      description: postDescription = \"\",\n      socialImage,\n    },\n  } = data.markdownRemark;\n\n  const description = postDescription || subtitle;\n  const image = socialImage?.publicURL && url.concat(socialImage?.publicURL);\n\n  return (\n    <Meta\n      title={`${postTitle} - ${title}`}\n      description={description}\n      image={image}\n    />\n  );\n};\n\nexport default PostTemplate;\n"],"names":["Author","author","useSiteMetadata","React","className","bio","href","getContactHref","contacts","twitter","rel","target","_ref","body","title","dangerouslySetInnerHTML","__html","date","Date","toLocaleDateString","year","month","day","Utterances","repo","theme","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","Object","entries","forEach","_ref2","key","value","setAttribute","current","appendChild","ref","displayName","post","html","tagSlugs","slug","fields","tags","frontmatter","Button","to","ThemeSwitcher","Content","Meta","Tags","Head","data","subtitle","url","postTitle","description","postDescription","socialImage","markdownRemark","image","publicURL","concat","Layout","Post"],"sourceRoot":""}