{"version":3,"file":"component---src-templates-post-template-post-template-tsx-b36b691070bc531d4921.js","mappings":"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","sources":["webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Utterances.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.module.scss","webpack://gatsby-starter-lumen/./src/templates/PostTemplate/PostTemplate.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { useSiteMetadata } from \"@/hooks\";\r\nimport { getContactHref } from \"@/utils\";\r\n\r\nimport * as styles from \"./Author.module.scss\";\r\n\r\nconst Author = () => {\r\n  const { author } = useSiteMetadata();\r\n\r\n  return (\r\n    <div className={styles.author}>\r\n      <p className={styles.bio}>\r\n        {author.bio}\r\n        <a\r\n          className={styles.twitter}\r\n          href={getContactHref(\"twitter\", author.contacts.twitter)}\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          {/* <strong>{author.name}</strong> on Twitter */}\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Author;\r\n","// extracted by mini-css-extract-plugin\nexport var author = \"Author-module--author--1c58d\";\nexport var bio = \"Author-module--bio--08950\";\nexport var twitter = \"Author-module--twitter--90647\";","import React from \"react\";\r\n\r\nimport * as styles from \"./Content.module.scss\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nconst Content: React.FC<Props> = ({ body, title }: Props) => (\r\n  <div className={styles.content}>\r\n    <h1 className={styles.title}>{title}</h1>\r\n    <div className={styles.body} dangerouslySetInnerHTML={{ __html: body }} />\r\n  </div>\r\n);\r\n\r\nexport default Content;\r\n","// extracted by mini-css-extract-plugin\nexport var body = \"Content-module--body--726c2\";\nexport var content = \"Content-module--content--80d58\";\nexport var title = \"Content-module--title--09504\";","import React from \"react\";\r\n\r\nimport * as styles from \"./Meta.module.scss\";\r\n\r\ninterface Props {\r\n  date: string;\r\n}\r\n\r\nconst Meta: React.FC<Props> = ({ date }: Props) => (\r\n  <div className={styles.meta}>\r\n    <p className={styles.date}>\r\n      Published{\" \"}\r\n      {new Date(date).toLocaleDateString(\"en-US\", {\r\n        year: \"numeric\",\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n      })}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Meta;\r\n","// extracted by mini-css-extract-plugin\nexport var date = \"Meta-module--date--4d30d\";\nexport var meta = \"Meta-module--meta--dae0a\";","import React, { createRef, useLayoutEffect } from \"react\";\r\n\r\nconst src = \"https://utteranc.es/client.js\";\r\n\r\nexport interface IUtterancesProps {\r\n  repo: string;\r\n  theme: string;\r\n}\r\n\r\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\r\n  const containerRef = createRef<HTMLDivElement>();\r\n\r\n  useLayoutEffect(() => {\r\n    const utterances = document.createElement(\"script\");\r\n\r\n    const attributes = {\r\n      src,\r\n      repo,\r\n      theme,\r\n      \"issue-term\": \"pathname\",\r\n      label: \"âœ¨ðŸ’¬ comments âœ¨\",\r\n      crossOrigin: \"anonymous\",\r\n      async: \"true\",\r\n    };\r\n\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n      utterances.setAttribute(key, value);\r\n    });\r\n\r\n    if (containerRef.current) {\r\n      containerRef.current.appendChild(utterances);\r\n    }\r\n  }, [repo]);\r\n\r\n  return <div ref={containerRef} />;\r\n});\r\n\r\nUtterances.displayName = \"Utterances\";\r\n\r\nexport default Utterances;\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"@/components/Button\";\r\nimport { ThemeSwitcher } from \"@/components/ThemeSwitcher\";\r\nimport type { Node } from \"@/types\";\r\n\r\nimport { Author } from \"./Author\";\r\nimport { Comments } from \"./Comments\";\r\nimport { Content } from \"./Content\";\r\nimport { Meta } from \"./Meta\";\r\nimport { Tags } from \"./Tags\";\r\n\r\nimport * as styles from \"./Post.module.scss\";\r\nimport Utterances from \"./Utterances\";\r\n\r\ninterface Props {\r\n  post: Node;\r\n}\r\n\r\nconst Post: React.FC<Props> = ({ post }: Props) => {\r\n  const { html } = post;\r\n  const { tagSlugs, slug } = post.fields;\r\n  const { tags, title, date } = post.frontmatter;\r\n\r\n  return (\r\n    <div className={styles.post}>\r\n      <div className={styles.buttons}>\r\n        <Button className={styles.buttonArticles} title=\"All Articles\" to=\"/\" />\r\n        <ThemeSwitcher />\r\n      </div>\r\n      <div className={styles.content}>\r\n        <Content body={html} title={title} />\r\n      </div>\r\n      <div className={styles.footer}>\r\n        <Meta date={date} />\r\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\r\n        <Author />\r\n      </div>\r\n      <div className={styles.comments}>\r\n        {/* <Comments postSlug={slug} postTitle={post.frontmatter.title} /> */}\r\n        <Utterances repo=\"dltlaos11/dltlaos11.github.io\" theme=\"github-light\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport var buttonArticles = \"Post-module--buttonArticles--d793a\";\nexport var buttons = \"Post-module--buttons--2972d\";\nexport var comments = \"Post-module--comments--d3b99\";\nexport var content = \"Post-module--content--3c6e5\";\nexport var footer = \"Post-module--footer--f8705\";\nexport var post = \"Post-module--post--3a994\";","import React from \"react\";\r\n\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport { Layout } from \"@/components/Layout\";\r\nimport { Meta } from \"@/components/Meta\";\r\nimport { Post } from \"@/components/Post\";\r\nimport { useSiteMetadata } from \"@/hooks\";\r\nimport { Node } from \"@/types\";\r\n\r\ninterface Props {\r\n  data: {\r\n    markdownRemark: Node;\r\n  };\r\n}\r\n\r\nconst PostTemplate: React.FC<Props> = ({ data: { markdownRemark } }: Props) => (\r\n  <Layout>\r\n    <Post post={markdownRemark} />\r\n  </Layout>\r\n);\r\n\r\nexport const query = graphql`\r\n  query PostTemplate($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      html\r\n      fields {\r\n        slug\r\n        tagSlugs\r\n      }\r\n      frontmatter {\r\n        date\r\n        description\r\n        tags\r\n        title\r\n        socialImage {\r\n          publicURL\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Head: React.FC<Props> = ({ data }) => {\r\n  const { title, subtitle, url } = useSiteMetadata();\r\n\r\n  const {\r\n    frontmatter: {\r\n      title: postTitle,\r\n      description: postDescription = \"\",\r\n      socialImage,\r\n    },\r\n  } = data.markdownRemark;\r\n\r\n  const description = postDescription || subtitle;\r\n  const image = socialImage?.publicURL && url.concat(socialImage?.publicURL);\r\n\r\n  return (\r\n    <Meta\r\n      title={`${postTitle} - ${title}`}\r\n      description={description}\r\n      image={image}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PostTemplate;\r\n"],"names":["Author","author","useSiteMetadata","React","className","bio","href","getContactHref","contacts","twitter","rel","target","_ref","body","title","dangerouslySetInnerHTML","__html","date","Date","toLocaleDateString","year","month","day","Utterances","repo","theme","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","Object","entries","forEach","_ref2","key","value","setAttribute","current","appendChild","ref","displayName","post","html","tagSlugs","slug","fields","tags","frontmatter","Button","to","ThemeSwitcher","Content","Meta","Tags","Head","data","subtitle","url","postTitle","description","postDescription","socialImage","markdownRemark","image","publicURL","concat","Layout","Post"],"sourceRoot":""}