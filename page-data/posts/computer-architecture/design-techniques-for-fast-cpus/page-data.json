{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/computer-architecture/design-techniques-for-fast-cpus","result":{"data":{"markdownRemark":{"id":"10a99510-6708-5399-bc4a-c22a1915e6ff","html":"<ul>\n<li><a href=\"#%ED%81%B4%EB%9F%AD\">클럭</a>\n<ul>\n<li><a href=\"#cpu-%EC%86%8D%EB%8F%84%EB%A5%BC-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\">CPU 속도를 빠르게 하는 방법</a></li>\n<li><a href=\"#%EA%B7%B8%EB%9F%BC-%EC%A0%95%EB%A7%90-%ED%81%B4%EB%9F%AD-%EC%8B%A0%ED%98%B8%EA%B0%80-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%B0%98%EB%B3%B5%EB%90%98%EB%A9%B4-cpu%EC%9D%98-%EC%84%B1%EB%8A%A5%EC%9D%80-%EC%A2%8B%EC%95%84%EC%A7%88%EA%B9%8C\">그럼 정말 클럭 신호가 빠르게 반복되면 CPU의 성능은 좋아질까</a></li>\n<li><a href=\"#%ED%81%B4%EB%9F%AD-%EC%86%8D%EB%8F%84\">클럭 속도</a></li>\n<li><a href=\"#%ED%81%B4%EB%9F%AD-%EC%8B%A0%ED%98%B8%EB%A5%BC-%EB%A7%88%EB%83%A5-%EB%86%92%EC%9D%B4%EB%A9%B4-cpu%EA%B0%80-%EC%97%84%EC%B2%AD-%EB%B9%A8%EB%9D%BC%EC%A7%88%EA%B9%8C\">클럭 신호를 마냥 높이면 CPU가 엄청 빨라질까</a></li>\n<li><a href=\"#%ED%81%B4%EB%9F%AD-%EC%86%8D%EB%8F%84%EB%A5%BC-%EB%8A%98%EB%A6%AC%EB%8A%94-%EB%B0%A9%EB%B2%95-%EC%9D%B4%EC%99%B8%EC%97%90%EB%8A%94\">클럭 속도를 늘리는 방법 이외에는</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%BD%94%EC%96%B4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%BD%94%EC%96%B4\">코어와 멀티코어</a>\n<ul>\n<li><a href=\"#%EC%BD%94%EC%96%B4\">코어</a></li>\n<li><a href=\"#%EC%BD%94%EC%96%B4%EB%A5%BC-100%EA%B0%9C-%EB%8A%98%EB%A6%AC%EB%A9%B4-%EC%97%B0%EC%82%B0-%EC%86%8D%EB%8F%84%EB%8F%84-%EA%B7%B8%EC%97%90-%EB%B9%84%EB%A1%80%ED%95%A0%EA%B9%8C\">코어를 100개 늘리면 연산 속도도 그에 비례할까</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%8A%A4%EB%A0%88%EB%93%9C%EC%99%80-%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%93%9C\">스레드와 멀티스레드</a>\n<ul>\n<li><a href=\"#%EC%8A%A4%EB%A0%88%EB%93%9C\">스레드</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"클럭\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9F%AD\" aria-label=\"클럭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클럭</h2>\n<h3 id=\"cpu-속도를-빠르게-하는-방법\" style=\"position:relative;\"><a href=\"#cpu-%EC%86%8D%EB%8F%84%EB%A5%BC-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"cpu 속도를 빠르게 하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU 속도를 빠르게 하는 방법</h3>\n<ol>\n<li>컴퓨터 부품들은 ‘클럭 신호’에 맞춰 일사불란하게 움직인다 → <Mark>클럭 신호를 빠르게 한다면\n<ul>\n<li><Mark>클럭신호</Mark>: 컴퓨터의 모든 부품을 일사불란하게 움직일 수 있게 하는 시간 단위</li>\n</ul>\n</li>\n<li>CPU는 ‘명령어 사이클’이라는 정해진 흐름에 맞춰 명령어들을 실행한다 → <Mark>명령어 사이클 또한 빠르게 반복 될 것</li>\n</ol>\n<h3 id=\"그럼-정말-클럭-신호가-빠르게-반복되면-cpu의-성능은-좋아질까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%BC-%EC%A0%95%EB%A7%90-%ED%81%B4%EB%9F%AD-%EC%8B%A0%ED%98%B8%EA%B0%80-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%B0%98%EB%B3%B5%EB%90%98%EB%A9%B4-cpu%EC%9D%98-%EC%84%B1%EB%8A%A5%EC%9D%80-%EC%A2%8B%EC%95%84%EC%A7%88%EA%B9%8C\" aria-label=\"그럼 정말 클럭 신호가 빠르게 반복되면 cpu의 성능은 좋아질까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그럼 정말 클럭 신호가 빠르게 반복되면 cpu의 성능은 좋아질까</h3>\n<p>=> 꼭 그런건 아니지만 일반적으로 Yes</p>\n<h3 id=\"클럭-속도\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9F%AD-%EC%86%8D%EB%8F%84\" aria-label=\"클럭 속도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클럭 속도</h3>\n<p><img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/dc0f7a32-f81b-4783-8de0-baf8fba14125\" alt=\"image\"></p>\n<ul>\n<li>클럭 속도: 헤르츠(Hz) 단위로 측정</li>\n<li>헤르츠(Hz): 1초에 클럭이 반복되는 횟수</li>\n<li>클럭이 ‘똑-딱-’하고 1초에 한 번 반복되면 <Mark>1Hz</li>\n<li>클럭이 1초에 100번 반복되면 <Mark>100Hz</li>\n</ul>\n<p><img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/8eff3334-daf7-4a88-81d6-cc26dddb65e7\" alt=\"image\"></p>\n<ul>\n<li>1초에 클럭이 기본적으로 25억번(2.5 * 4109)번</li>\n<li>순간적으로 최대 49억(4.9 * 109)번 반복 → 기본, 최대가 있는 것처럼 클럭은 일정하지 않다. <Mark>선택적</li>\n</ul>\n<h3 id=\"클럭-신호를-마냥-높이면-cpu가-엄청-빨라질까\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9F%AD-%EC%8B%A0%ED%98%B8%EB%A5%BC-%EB%A7%88%EB%83%A5-%EB%86%92%EC%9D%B4%EB%A9%B4-cpu%EA%B0%80-%EC%97%84%EC%B2%AD-%EB%B9%A8%EB%9D%BC%EC%A7%88%EA%B9%8C\" aria-label=\"클럭 신호를 마냥 높이면 cpu가 엄청 빨라질까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클럭 신호를 마냥 높이면 cpu가 엄청 빨라질까</h3>\n<p>꼭 그런건 아니다 → 필요 이상으로 클럭을 높이면 <Mark>발열</Mark>이 심해짐</p>\n<h3 id=\"클럭-속도를-늘리는-방법-이외에는\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9F%AD-%EC%86%8D%EB%8F%84%EB%A5%BC-%EB%8A%98%EB%A6%AC%EB%8A%94-%EB%B0%A9%EB%B2%95-%EC%9D%B4%EC%99%B8%EC%97%90%EB%8A%94\" aria-label=\"클럭 속도를 늘리는 방법 이외에는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클럭 속도를 늘리는 방법 이외에는</h3>\n<ul>\n<li><Mark>코어 수</Mark>를 늘리는 방법(’듀얼 코어’, ‘멀티 코어’, …)</li>\n<li><Mark>스레드 수</Mark>를 늘리는 방법(’멀티 스레드’, ..)</li>\n</ul>\n<h2 id=\"코어와-멀티코어\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EC%96%B4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%BD%94%EC%96%B4\" aria-label=\"코어와 멀티코어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코어와 멀티코어</h2>\n<p><img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/8f712274-8871-42fd-8dc4-3c83a23e787e\" alt=\"image\"></p>\n<h3 id=\"코어\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EC%96%B4\" aria-label=\"코어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코어</h3>\n<ul>\n<li>현대적인 관점에서 “CPU”라는 용어에 대한 재해석 필요</li>\n<li>“명령어를 실행하는 부품” ??</li>\n<li>전통적으로 ‘명령어를 실행하는 부품’은 원칙적으로 하나만 존재</li>\n<li>그러나 오늘날 CPU에는 “명령어를 실행하는 부품”이 여러 개 존재</li>\n<li>“명령어를 실행하는 부품”을 <Mark>코어</Mark>라는 용어로 사용</li>\n<li>c.f.) ”<Mark>코어</Mark>“는 명령을 실행할 수 있는 <Mark>CPU 내의 처리 장치</Mark>이고, ”<Mark>프로세서</Mark>“는 <Mark>하나 이상의 코어로 구성될 수 있는 전체 CPU 칩</Mark>을 의미</li>\n</ul>\n<p><img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/b972b6ed-baac-4db2-8e66-c120a2976590\" alt=\"image\"></p>\n<p><Mark>멀티코어 프로세서</Mark>: 여러 개의 코어를 포함한 CPU</p>\n<h3 id=\"코어를-100개-늘리면-연산-속도도-그에-비례할까\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EC%96%B4%EB%A5%BC-100%EA%B0%9C-%EB%8A%98%EB%A6%AC%EB%A9%B4-%EC%97%B0%EC%82%B0-%EC%86%8D%EB%8F%84%EB%8F%84-%EA%B7%B8%EC%97%90-%EB%B9%84%EB%A1%80%ED%95%A0%EA%B9%8C\" aria-label=\"코어를 100개 늘리면 연산 속도도 그에 비례할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코어를 100개 늘리면 연산 속도도 그에 비례할까</h3>\n<p>꼭 코어 수 에 비례하여 증가하지는 않는다. 조별과제와 비유하면 된다.\r\n여러개의 코어를 두는 설계방식은 명령어를 각각의 코어에 적절하게 분배하느냐가 중요하다.</p>\n<h2 id=\"스레드와-멀티스레드\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EB%A0%88%EB%93%9C%EC%99%80-%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%93%9C\" aria-label=\"스레드와 멀티스레드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스레드와 멀티스레드</h2>\n<p>간단하게는 스레드란 ‘<Mark>실행 흐름의 단위</Mark>’</p>\n<p><img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/cc9f3e19-a283-400c-8e12-b93a4e0eb318\" alt=\"image\"></p>\n<h3 id=\"스레드\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EB%A0%88%EB%93%9C\" aria-label=\"스레드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스레드</h3>\n<ul>\n<li>\n<p>하드웨어 스레드</p>\n<ul>\n<li>하나의 코어가 동시에 처리하는 명령어 단위</li>\n<li>멀티 스레드 프로세서, 멀티 스레드 CPU(2코어 4스레드 CPU)</li>\n</ul>\n<p><img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/81171e90-9971-4aae-80aa-637bc67394b4\" alt=\"image\">\r\n</br>\r\n<img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/0c522fd1-f30b-4294-9407-61d8c67fdc14\" alt=\"image\"></p>\n<ul>\n<li>\n<p>명령어를 실행하고 해석하는 부품이 8개 있고 각각의 부품이 2개씩의 명령어를 동시에 실행해서 처리할 수 있음 → <Mark>16개의 명령어가 동시에 처리 가능</p>\n</li>\n<li>\n<p>c.f. ) 하이퍼스레딩: 인텔의 멀티스레드 기술</p>\n</li>\n<li>\n<p>멀티스레드 프로세서를 설계하는 일은 매우 복잡하지만 가장 큰 핵심은 <Mark>레지스터</p>\n<p><img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/d0663fd6-3ce2-424e-8bb5-6cc1be81bca4\" alt=\"image\"></p>\n<ul>\n<li>하나의 명령어를 실행하기 위해서 꼭 필요한 레지스터들을 편의상 ‘레지스터 세트’라고 표기</li>\n<li>레지스터 세트가 하나의 코어 내부에 여러개 존재한다면 하나의 코어가 여러개의 명령어를 동시에 처리 가능</li>\n<li>에를 들어 하나의 코어가 <Mark>PC</Mark>(메모리에서 다음으로 인출할 명령어의 주소가 저장되는 공간)를 2개들고 있다면 <Mark>다음으로 실행할 명령어의 주소를 2개 지정 가능</Mark> 혹은 <Mark>스택 포인터(스택의 꼭대기)</Mark>가 2개 있다고 가정한다면 2개의 스택의 꼭대기를 가리키고 <Mark>2개의 스택 관리 가능.</li>\n<li>이처럼 하나의 명령어를 실행하기 위해서 꼭 필요한 레지스터들을 하나의 코어가 여러개 갖고 있다면 멀티 스레드 프로세서를 설계할 수 있다.\r\n<img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/7ce18bfb-bb36-458d-81c5-5e901badf598\" alt=\"image\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>소프트웨어 스레드</p>\n<ul>\n<li>\n<p>하나의 프로그램에서 독립적으로 실행되는 단위</p>\n<p><img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/7866cfe4-bf27-4b88-93f2-2e33c9472c5c\" alt=\"image\"></p>\n<ul>\n<li>\n<p>싱글스레드: 한 프로그램이 하나의 실행 흐름만 가지고 순차적으로 실행</p>\n</li>\n<li>\n<p>멀티스레드: 하나의 프로그램에서 동시에 2개 이상의 영역이 실행</p>\n<p><img src=\"https://github.com/dltlaos11/CodeSolving/assets/74396128/85158dd1-ca4e-486e-bf50-9f2c4b7528b1\" alt=\"image\"></p>\n<ul>\n<li>하나의 프로그램의 독립적으로 실행되는 단위가 여러개 만들어져서 하나의 프로그램에서 동시에 여러가지 기능을 수행 가능</li>\n</ul>\n</li>\n<li>\n<p><Mark>1코어 1스레드 CPU도 여러 소프트웨어적 스레드를 만들 수 있다, 위 사진처럼</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/2023-08-28---빠른 CPU를 위한 설계 기법//posts/computer-architecture/design-techniques-for-fast-cpus","tagSlugs":["/tag/computerarchitecture/","/tag/cs/"]},"frontmatter":{"date":"2023-08-28T18:40:32.169Z","description":"빠른 CPU를 위한 설계 기법에 대해서 배웁니다.","tags":["ComputerArchitecture","CS"],"title":"빠른 CPU를 위한 설계 기법","socialImage":null}}},"pageContext":{"slug":"/posts/2023-08-28---빠른 CPU를 위한 설계 기법//posts/computer-architecture/design-techniques-for-fast-cpus"}},"staticQueryHashes":["2236276093","251939775","401334301"]}